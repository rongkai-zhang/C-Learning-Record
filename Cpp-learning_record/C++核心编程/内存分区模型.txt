1  内存分区模型
  C++程序在执行时，将内存大方向分为4个区域
  ・代码区 ：写的所有代码都会放到代码区 存放函数体的二进制代码 由系统进行管理
  ・全局区：存放全局变量和静态变量以及常量
  .栈区 ： 由编译器自动分配释放，存放函数的参数值 局部变量等 （由编译器决定它的生死）
  ・堆区 ： 由程序员分配和释放，若程序员不释放，程序结束时由操作系统回收
 四区存在的意义：
   不同区域存放的数据，赋予不同的生命周期，给我们更大的灵活编程
1.1 程序运行前
  程序编译后生成了  exe 可执行程序 ，未执行该程序之前分为两个区域 
    代码区：
        存放CPU执行的机器指令 （二进制的0101的东西，也就是我们写的代码）
        代码区是共享的 ，共享的目的是对于频繁执行的程序，只需要内存中有一份代码即可
        代码区是只读的，防止程序意外修改了它的指令 
    全局区：
       存放有： 全局变量  静态变量  常量
          而常量区中有   const修饰的全局常量   和字符串常量
       这个区域的数据在程序结束之后由操作系统释放，栈区开辟的数据由编译器自动释放

1.2 程序运行后 
    栈区：编译器自动分配和释放，存放函数的参数值，局部变量等
    注意事项： 不要返回局部变量的地址，

    堆区：
      由程序员分配和释放，若程序员不释放，程序结束时由操作系统回收
      在C++中主要利用new在堆区开辟内存
               
